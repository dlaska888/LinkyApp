version: '3'

services:
  web:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
      args:
        USE_SSL: ${USE_SSL}
        SSL_CERT_PATH: ${SSL_CERT_PATH} # files should be named default.crt and default.key
    ports:
      - "${WEB_HOST_PORT}:80"
    environment:
      WEB_PORT: ${WEB_HOST_PORT}
    volumes:
      - .:/app/
    networks:
      - app
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    environment:
      XDEBUG_MODE: debug
      XDEBUG_CONFIG: mode=develop,coverage,debug idekey=docker start_with_request=yes log=/dev/stdout log_level=0 client_port=9003 client_host=host.docker.internal
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
    volumes:
      - .:/app/
      - ./uploads:/app/uploads/
    networks:
      - app
  postgres:
    image: postgres:alpine3.18
    restart: always
    ports:
      - "${DB_HOST_PORT}:5342"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - app
      - database
    volumes:
      - ./docker/postgres/:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data
  # wait a second after first compose before accessing in browser
  pgadmin:
    image: dpage/pgadmin4:7.8
    container_name: pgadmin
    restart: "unless-stopped"
    ports:
      - "${PGADMIN_HOST_PORT}:80"
    networks:
      - database
    volumes:
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_USE_MASTER_PASSWORD}
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: ${PGADMIN_USE_MASTER_PASSWORD}

networks:
  app:
  database:

volumes:
  pgdata:
  uploads:
