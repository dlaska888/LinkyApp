version: '3'

services:
  nginx:
    restart: always
    depends_on:
      - php
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
      args:
        MODE: ${MODE}
        SSL_CERT_PATH: ${SSL_CERT_PATH} # files should be named default.crt and default.key
    ports:
      - "${WEB_PORT}:80"
      - "${WEB_PORT_SSL}:443"
    environment:
      WEB_PORT: ${WEB_PORT}
      WEB_PORT_SSL: ${WEB_PORT_SSL}
      DOMAIN: ${DOMAIN}
    volumes:
      - .:/app/
      - ./certbot/letsencrypt:/etc/letsencrypt:ro # mounting the folder to the nginx container 
      - ./certbot/data:/var/www/certbot
  certbot:
    image: certbot/certbot:latest
    depends_on:
      - nginx
    command: >-
      certonly --reinstall --webroot --webroot-path=/var/www/certbot
      --email ${EMAIL} --agree-tos --no-eff-email
      -d ${DOMAIN}
    volumes:
      - ./certbot/letsencrypt:/etc/letsencrypt
      - ./certbot/data:/var/www/certbot
  php:
    restart: always
    depends_on:
      - postgres
      - selenium
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    environment:
      XDEBUG_MODE: debug
      XDEBUG_CONFIG: mode=develop,coverage,debug idekey=docker start_with_request=yes log=/dev/stdout log_level=0 client_port=9003 client_host=host.docker.internal
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
    volumes:
      - .:/app/
      - ./uploads:/app/uploads/
  postgres:
    image: postgres:alpine3.18
    restart: always
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./docker/postgres/:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data
  selenium:
    image: selenium/standalone-firefox:4.18.1
    
  # wait a second after first compose before accessing in browser
  pgadmin:
    image: dpage/pgadmin4:7.8
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_USE_MASTER_PASSWORD}
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: ${PGADMIN_USE_MASTER_PASSWORD}

volumes:
  pgdata:
  uploads:
